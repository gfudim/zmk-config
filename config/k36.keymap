#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
/* use helper macros to define left and right hand keys */
#include "zmk-helpers/key-labels/36.h"         

#define DEFAULT 0
#define MEDIA 1
#define NAV 2
#define MOUSE 3
#define SYM 4
#define NUM 5
#define FUN 6

// key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced"; 
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
						require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
						hold-trigger-key-positions = <KEYS_R THUMBS>;
    				hold-trigger-on-release;             // delay positional check until key-release
        };
				hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced"; 
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
						require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
						hold-trigger-key-positions = <KEYS_L THUMBS>;
    				hold-trigger-on-release;      
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
  &kp Q       &kp W       &kp E        &kp R        &kp T          &kp Y      &kp U        &kp I        &kp O       &kp P
  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G          &kp H      &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMI
  &kp Z       &kp X       &kp C        &kp V        &kp B          &kp N      &kp M        &kp COMMA    &kp DOT     &kp FSLH
                          &lt 1 ESC    &lt 2 SPACE  &lt 6 TAB      &lt 3 RET  &lt 4 BSPC   &lt 5 DEL
            >;
        };

        media_layer {
            bindings = <
  &none     &none     &none      &none       &none      &none       &none       &none              &none            &none
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &none      &none       &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT
  &none     &none     &none      &none       &none      &none       &none       &none              &none            &none
                      &none      &none       &none      &kp C_STOP  &kp C_PP    &kp C_MUTE
            >;
        };

        nav_layer {
            bindings = <
  &none     &none     &none      &none       &none      &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &none      &kp CAPSLOCK   &kp LEFT        &kp DOWN       &kp UP        &kp RIGHT
  &none     &none     &none      &none       &none      &kp INSERT     &kp HOME        &kp PG_DN      &kp PG_UP     &kp END
                      &none      &none       &none      &kp RET        &kp BSPC        &kp DEL
            >;
        };

        /* This needs to be implemented when mouse keys hits ZMK's main branch */

        sym_layer {
            bindings = <
  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC       &none  &none       &none      &none     &none
  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS       &none  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LGUI
  &kp TILDE  &kp EXCL  &kp AT     &kp POUND  &kp PIPE       &none  &none       &none      &none     &none
                       &kp LPAR   &kp RPAR   &kp UNDER      &none  &none       &none
            >;
        };

        num_layer {
            bindings = <
  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT       &none  &none       &none      &none     &none
  &kp SQT    &kp N4  &kp N5   &kp N6  &kp EQUAL      &none  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LGUI
  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH       &none  &none       &none      &none     &none
                     &kp DOT  &kp N0  &kp MINUS      &none  &none       &none
            >;
        };

        fun_layer {
            bindings = <
  &kp F12  &kp F7  &kp F8       &kp F9     &kp PSCRN            &none  &none       &none      &none     &none
  &kp F11  &kp F4  &kp F5       &kp F6     &kp SLCK             &none  &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LGUI
  &kp F10  &kp F1  &kp F2       &kp F3     &kp PAUSE_BREAK      &none  &none       &none      &none     &none
                   &kp K_CMENU  &kp SPACE  &kp TAB              &none  &none       &none
            >;
        };

        settings_layer {
            bindings = <
  &none  &none  &none  &none  &none      &none         &none         &none        &none        &out OUT_BLE
  &none  &none  &none  &none  &none      &none        &none        &none        &none        &out OUT_USB
  &none  &none  &none  &none  &none      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
                  &none  &none  &none      &none        &none        &none
            >;
        };
    };
};
